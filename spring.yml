apiVersion: apps/v1
kind: Deployment
metadata:
  name: ami-assurance-app
  namespace: amine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ami-assurance-app
  template:
    metadata:
      labels:
        app: ami-assurance-app
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15
        command: ['sh', '-c', 'sleep 10; until pg_isready -h postgres-service -p 5432 -U postgres; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: PGPASSWORD
          value: "admin"
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
      containers:
      - name: ami-assurance-app
        image: salimbouazizi/pfe_r_back:0.0.2
        ports:
        - containerPort: 8044
        env:
        - name: SPRING_APPLICATION_NAME
          value: "ami_assurance"
        - name: SERVER_PORT
          value: "8044"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/AMIdb"
        - name: SPRING_DATASOURCE_USERNAME
          value: "postgres"
        - name: SPRING_DATASOURCE_PASSWORD
          value: "admin"
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: "org.postgresql.Driver"
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: "update"
        - name: SPRING_JPA_SHOW_SQL
          value: "true"
        - name: SPRING_JPA_OPEN_IN_VIEW
          value: "false"
        - name: SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT
          value: "120000"
        - name: SPRING_DATASOURCE_HIKARI_INITIALIZATION_FAIL_TIMEOUT
          value: "120000"
        - name: SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE
          value: "10"
        - name: SPRING_DATASOURCE_HIKARI_MAX_LIFETIME
          value: "1800000"
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC_CORE
          value: "DEBUG"
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC_CORE_JDBCTEMPLATE
          value: "DEBUG"
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC_CORE_STATEMENTCREATORUTILS
          value: "TRACE"
        - name: LOGGING_LEVEL_COM_ZAXXER_HIKARI
          value: "DEBUG"
        - name: LOGGING_LEVEL_ORG_POSTGRESQL
          value: "DEBUG"
        - name: LOGGING_LEVEL_JAVA_NET
          value: "DEBUG"
        - name: SPRING_MAIL_HOST
          value: "smtp.gmail.com"
        - name: SPRING_MAIL_PORT
          value: "587"
        - name: SPRING_MAIL_USERNAME
          value: "salimbouazizi42@gmail.com"
        - name: SPRING_MAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ami-secrets
              key: SPRING_MAIL_PASSWORD
        - name: SPRING_MAIL_PROTOCOL
          value: "smtp"
        - name: SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH
          value: "true"
        - name: SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE
          value: "true"
        - name: SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED
          value: "true"
        - name: SPRING_MAIL_DEBUG
          value: "true"
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: ami-secrets
              key: TWILIO_ACCOUNT_SID
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: ami-secrets
              key: TWILIO_AUTH_TOKEN
        - name: TWILIO_PHONE_NUMBER
          valueFrom:
            secretKeyRef:
              name: ami-secrets
              key: TWILIO_PHONE_NUMBER
        - name: SPRING_THYMELEAF_CHECK_TEMPLATE_LOCATION
          value: "false"
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          tcpSocket:
            port: 8044
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 6
        livenessProbe:
          tcpSocket:
            port: 8044
          initialDelaySeconds: 60
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: ami-assurance-service
  namespace: amine
spec:
  selector:
    app: ami-assurance-app
  ports:
  - port: 8044
    targetPort: 8044
    nodePort: 30007
  type: NodePort